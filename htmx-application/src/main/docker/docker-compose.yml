version: "3.8"

services:
  db:
    container_name: ${PROJECT_NAME:-default}-postgresdb
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGPASSWORD: ${PGPASSWORD:-password123}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      TZ: "Asia/Tokyo"
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - postgres

  redis_server:
    container_name: ${PROJECT_NAME:-default}-redis_server
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
    depends_on:
      - db
    networks:
      - postgres

  minio:
    image: quay.io/minio/minio:RELEASE.2023-12-02T10-51-33Z-cpuv1
    container_name: ${PROJECT_NAME:-default}-minio_server
    ports:
      - ${MINIO_PORT:-9000}:9000
      - ${MINIO_CONSOLE_PORT:-9001}:9001
    volumes:
      - minioData:/export
      - minioConfig:/root/.minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minio}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minio123}
    command: server /export --console-address ":9001"
  createBuckets:
    container_name: ${PROJECT_NAME:-default}-buckets_client
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add myminio http://minio:9000 ${MINIO_ROOT_USER:-minio} ${MINIO_ROOT_PASSWORD:-minio123}) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb myminio/${MINIO_BUCKET_NAME:-myBucket};
      /usr/bin/mc policy download myminio/${MINIO_BUCKET_NAME:-myBucket};
      exit 0;
      "

networks:
  postgres:
    driver: bridge

volumes:
  postgres:
  redis:
  minioConfig:
  minioData:
